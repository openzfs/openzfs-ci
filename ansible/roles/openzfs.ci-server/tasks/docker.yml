---
#
# Note, we rely on the "angstwad.docker_ubuntu" dependency to ensure the
# docker package is installed and properly configured. As a result, we
# don't do any package installation or configuration in this file.
#

- name: create docker group
  group:
    name: docker
    system: yes

- name: add docker groups to specified user
  user:
    name: ubuntu
    append: yes
    groups: docker

- name: checkout openzfs-ci repository
  git:
    repo: https://github.com/openzfs/openzfs-ci.git
    dest: /mnt/openzfs-ci/master
    version: master
    update: yes
  register: openzfsci

- name: build docker image
  command: "./scripts/docker/build-jenkins-master.sh"
  args:
    chdir: /mnt/openzfs-ci/master
  when: openzfsci.changed

#
# The Jenkins master container will run the Jenkins process using a UID
# of 1000. Thus, we need to ensure the container's volume is configured
# correctly, such that the Jenkins process will be able to modify files
# contained in it.
#
- name: configure permissions of jenkins-master directory
  file:
    dest: /mnt/jenkins-master
    owner: 1000
    group: 1000
    mode: 0755
    state: directory

#
# This depends on the docker image already being built and loaded on the
# server that will run this container. We don't build and publish these
# images to any docker image registry, so we don't have a way to pull
# down this image if it doesn't already exist on the system.
#
- name: create and run jenkins-master docker container
  docker_container:
    name: jenkins-master
    image: openzfs/jenkins-master
    state: started
    ignore_image: yes
    restart_policy: always
    security_opts: "apparmor:unconfined"
    ports:
      - 8080:8080
      - 50000:50000
    expose:
      - 8080
      - 50000
    volumes:
      - "/mnt/jenkins-master:/var/jenkins_home:rw"
    env:
      VIRTUAL_HOST: jenkins.open-zfs.org
      VIRTUAL_PORT: 8080
      JENKINS_URL: http://jenkins.open-zfs.org
      JENKINS_SLAVE_AGENT_PORT: 50000
      OPENZFS_REPOSITORY: openzfs/openzfs
      OPENZFS_BRANCH: master
      JAVA_OPTS: "-Dhudson.remoting.Launcher.pingIntervalSec=600"

- name: create and run cadvisor docker container
  docker_container:
    name: cadvisor
    image: google/cadvisor
    state: started
    restart_policy: always
    security_opts: "apparmor:unconfined"
    ports:
      - 8008:8080
    expose:
      - 8008
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:rw"
      - "/sys:/sys:ro"
      - "/mnt/docker-host:/var/lib/docker:ro"

- name: create and run nginx-proxy docker container
  docker_container:
    name: nginx-proxy
    image: jwilder/nginx-proxy
    state: started
    restart_policy: always
    security_opts: "apparmor:unconfined"
    ports:
      - "80:80"
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
